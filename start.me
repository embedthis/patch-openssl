/*
    start.me - Openssl MakeMe file

    Files:
        package.json embedthis.patch start.me openssl.me windows.bat
 */

Me.load({
    targets: {
        postcache: {
            action: `
                trace('Patch', 'Apply patches')
                for each (f in Path('.').files('*.patch')) {
                    sh('patch < ' + f)
                }
                trace('Build', 'Openssl libraries')
                if (Config.OS == 'windows') {
                    function cmd(command) {
                        let os = Config.CPU == 'x64' ? 'x86_amd64' : 'x86'
                        sh('windows.bat ' + os + ' ' + command)
                    }
                    if (Config.CPU == 'x64') {
                        config = 'VC-WIN64A'
                        script = 'ms/do_win64a.bat'
                    } else {
                        config = 'VC-WIN32'
                        script = 'ms/do_ms.bat'
                    }
                    cmd('perl Configure ' + config)
                    cmd(script)
                    cmd('nmake -f ms/ntdll.mak')

                } else {
                    sh('chmod +x Configure config; touch Makefile')
                    if (Config.OS == 'macosx') {
                        /* Dont use -j4 - fails. Use debug-darwin-x86-64-cc for a debug build */
                        sh('./Configure darwin64-x86_64-cc; make')
                    } else {
                        sh('./config ; make')
                    }
                }
            `
        }
    }
})
